{"filter":false,"title":"timelog.xml","tooltip":"/doc/timelog.xml","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":75,"column":2990},"end":{"row":75,"column":2991},"action":"insert","lines":["å"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2991},"end":{"row":75,"column":2992},"action":"insert","lines":["ö"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2991},"end":{"row":75,"column":2992},"action":"remove","lines":["ö"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2990},"end":{"row":75,"column":2991},"action":"remove","lines":["å"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2990},"end":{"row":75,"column":2991},"action":"insert","lines":["å"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2991},"end":{"row":75,"column":2992},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2992},"end":{"row":75,"column":2993},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2993},"end":{"row":75,"column":2994},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2994},"end":{"row":75,"column":2995},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2995},"end":{"row":75,"column":2996},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2996},"end":{"row":75,"column":2997},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2996},"end":{"row":75,"column":2997},"action":"remove","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2996},"end":{"row":75,"column":2997},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2997},"end":{"row":75,"column":2998},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2998},"end":{"row":75,"column":2999},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":2999},"end":{"row":75,"column":3000},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3000},"end":{"row":75,"column":3001},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3001},"end":{"row":75,"column":3002},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3002},"end":{"row":75,"column":3003},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3003},"end":{"row":75,"column":3004},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3004},"end":{"row":75,"column":3005},"action":"insert","lines":["y"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3005},"end":{"row":75,"column":3006},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3006},"end":{"row":75,"column":3007},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3007},"end":{"row":75,"column":3008},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3008},"end":{"row":75,"column":3009},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3009},"end":{"row":75,"column":3010},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3010},"end":{"row":75,"column":3011},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3011},"end":{"row":75,"column":3012},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3012},"end":{"row":75,"column":3013},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3013},"end":{"row":75,"column":3014},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3014},"end":{"row":75,"column":3015},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3015},"end":{"row":75,"column":3016},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3015},"end":{"row":75,"column":3016},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":3015},"end":{"row":75,"column":3016},"action":"insert","lines":["!"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":69},"end":{"row":72,"column":70},"action":"insert","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":70},"end":{"row":72,"column":71},"action":"insert","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":71},"end":{"row":72,"column":72},"action":"insert","lines":[":"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":72},"end":{"row":72,"column":73},"action":"insert","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":72,"column":73},"end":{"row":72,"column":74},"action":"insert","lines":["0"]}]}],[{"group":"doc","deltas":[{"start":{"row":296,"column":8},"end":{"row":309,"column":22},"action":"insert","lines":["        <reflections>","            <stamp id=\"1\" date=\"20141123\" startTime=\"8:00\" endTime=\"09:00\">","                <notes>Reflekterat uppgift 1a. (Planering, tänka efter, fundera, begrunda, spekulera, överväga är ord som hjälper mig att komma igenom skrivandet för att om möjligt uppnå kravet på antal ord i reflektionerna....</notes>","            </stamp>","            <reflection>Reflektion Uppgift 1a: Den här uppgiften var ganska så rättfram vad det gäller logiken i själva programmet. Enkelt att skapa sig en bild av det är som ska utföras. Uppgiften i sig bygger inte heller upp några särskilda krav på hur ett färdigt program ska vara vid leverans. Frågor som dyker upp nu kan dock vara felhantering. Eftersom metoden endast har intress av att \"räkna\" gement \"a\" och versalt \"A\" innebär det ju att det enda som ska in i programmet och beräknas faktiskt är bokstäver. Ytterligae påbyggnad av programmets funktionalitet skulle kunna vara att lägga in try/catch-satser med felhantering. Exempelvis skulle man kunna på ett tydligt sätt markera formulärsfältet med någon \"skrikig\" färg att här har det blivit fel. Varsågod att mata in ett nytt värde. Självklart skulle man bygga in även denna funktionalitet  med hjälp av javascript. Däremot vore det möjligen lämpligt att skapa en \"error.js\" för detta ändamålet. Vad gäller felhantering och validering under programmets gång så är det något som jag vill bli så mycket bättre på. Jag tänker att kan man bygga in \"hinder\" i programutveckling som gör att tydliga fel uppkommer så skulle man ha väldigt stort nytta av detta. Ibland, eller kanska rentav ganska ofta. Framförallt då när kodning sker i javscript innfinner sig en känsla av att man tappar kontakten med kodandet. Saker uppför sig inte som man tänkt sig att det ska. Innan denna kursen \"Iterativ Mjukvaruutveckling\" så läste jag C# med hjälp av utvecklingsmiljön Visual Studio. Kan känna att just \"debuggin\" i javscript känns svårate då jag inte hitta snabba vägar att debugga på ett effektivt sätt. Om man ska dra en paralell i att utvecklar program till exempelvis löpning så kan man nog säga att man kan ha en tränande löpare som tränar regelbundet som en förebild. Träningarna i sig kan man se som delmål för att slutligen komma till huvudmålet för just träningen. Om man översätter löparen små delmål till \"punktform\" för att nå huvudmålet (färdig applikation) så kommer man få arbetet att löpa på så mycket bättre. Har man dessutom tidsuppskatta och kalkylreat de olika delmålen/leveranserna av programvara så kan man även följa upp detta. Antingen håller kalkyerna, kanske rentav att man går plus. Eller i det sämre läget. Man har räknat bort sig och måste därmed revidera sin kalkylberäkning inför framtida projekt. Däremot kan delmålen och just uppföljning och eventuell aktuell reflektion kring dessa göra alla parter i projektet mer medvetna om problematiken för olika uppgifter inom \"samma projekt\".</reflection>","            <stamp id=\"2\" date=\"20141123\" startTime=\"09:00\" endTime=\"10:00\"> ","                <notes>Reflekterat uppgift 1b</notes>","            </stamp>","            <reflection>Reflektion Uppgift 1b: Vid start av uppgift 1b gjordes ganska omgående upptäckten av att återanvändning av kod från tidigare uppgift (1a) borde vara möjlig. Tänkte att likheten i programmet möjliggr \"absolut\" återanvänding av html/scc och det enda som jag egentligen behövde modifiera var logiken i programmet. Paralellt med denna kurs läser jag javscript. Javascript är också det språk som jag kommer att använda för samtliga upgifter i Laboration 1 DV404 - Planering och förbättring. Anledning till att jag väljer javscript framför c# eller php (som jag anser mig kunna om man jämför mer javscript) är att jag ser det som en självklarhet att utmana sig själv att sträcka sig efter nya insikter och bli förhoppningsvis en bättre och mer komplett programmerare. Därför har jag därför i denna uppgift för första gången försökt att tillämpa något som heter konstruktorfunktioner i javascript. En konstruktorfunktion i javscript är så nog så \"nära\" en klass man kan komma i javscript. Konstruktorfunktionen kom jag att kalla Calculator och ligger i filen Calculator.js. Att lägga märke till är att filnamn och funktion har samma benämning med en första boksta som versal. Möjligen kan man se det som \"överkurs\" att göra en \"klass\" för denna labb, men då jag behöver parallel träning mot kursen webbteknik I i javascript ser jag det som ett utmärkt tillfälle för repetition. Vad gäller konstruktorfunktionen så skapade jag en medlem som var ansvarig för att hålla aktuell sträng, en räknar som fick ta emot värdet från \" nollor\" (this.zeros) 1b_run.js vid körning, en räknare som tog emot udda tal (this.odd) och slutligen också en räknare för de jämna talen (this.even). Känner att jag gjort mig en stor tjänst i denna lösning då jag börjar greppa styrkan i att använda sig av objekt i programmering. Det kändes väldigt ledande i själva programmerandet just när man skrev \"iteratorn\" i \"1b_run.js\" hur den skulle skicka iväg räknade värden för att läggas in i objektet som jag kallade \"Calc\" i uppgiften. Denna lösning innebär också att det skulle vara betydligt enklare att bygga vidare på en mer komplex beräkning med flera objekt av \"Calculator. En viktig bit att minnas från denna labb är att man tydligen aldrig kan läsa en uppgift för många ggr. Jag hade troligen ett stort intresse av att jobba med labb 1c när det var labb 1b som skulle göras. Lyckligtvis var det inte värre än att jag \"moddade\" koden jag vid tillfället lyckas att skapa för att passa för den rätta uppgiften. Har också vid denna labb förjat fundera på det här planering av mjukvaruprojekt. Kanske ska man lägga dit kommentare när man ändå tidsrapportera. Kan för egen del tycka att det gått åt alldeles för mycket tid för detta enkla program så här efteråt. En tid säger ju inte vad det är man gjort. Detta skulle också vara högaktuellt vid \"uppföljningsmöten\" och utvärderingar och olika slag. Som ett stöd för \"förbättringsåtgärder\". Könns som en bra och kritisk tanke oftare dyker upp i mitt huvud nu. Vad håller jag på med och vad gör jag av min tid?. Är detta effektivt nog tidsmässig?</reflection>","            <stamp id=\"3\" date=\"20141123\" startTime=\"10:15\" endTime=\"11:00\"> ","                <notes>Reflekterat uppgift 1c</notes>","            </stamp>","            <reflection>Tänkte att den här uppgiften är gjord på en kvart. Det var den som jag av misstag startade med på labb 1b. Intog väl en slapp attityd och slökodade utan att fokuser. Är det nåt som jag börjar att inse. Är man trött och tappar förmågan att hålla flera variabler och logik i huvudet är det dags att ta ett \"break\". Väldigt ofta är det under dessa micropauser man kommer till insikt. Ibland blir man förblindad av vad det är man ska göra. Vilken ordning man behöver göras saker. Vad är det faktiskt som krävs att man löser för att kunna leverera en fungerande programvara. Uppgiften gjorde mig frustrerad eftersom jag saknade någon form av kontrollvariabel under körningen. Borde noterat vilken variabel det var men gjorde inte så. Härmed inser jag då återigen allvaret i att utvärdera sig själv, så som dessa uppfgifter \"påtvingar\" oss att göra. Vad gäller mina formulär så börjar jag känna att det finns \"utveckligspotential\" i att använda sig av den metod som jag valt. Det var en lång startsträcka med de är ett gott stöd nu när de finns på plats. När jag rappoerterar en tid blir det snyggt och prydligt. Även om jag känner att själva programmeringen misslyckas emellanåt så är i alla fall tidsrapportering väl strukturerad. Vad gäller lösningen för denna uppgiften utgick jag jag som tidigare sagt från uppgift 1b. Justerade min konstruktorfunktions medlemsvariabler till lämpliga värden. Initialt använde jag mig av tre \"värdehållare\" för att lösa problemet. Trologen var detta en stor bov till att det tog så lång tid att bli färdig. Det tog inte speciellt lång tid efter att jag ritat upp ett \"pyramidliknade\" algoritm att inse att jag faktisk bara behövde två värde sparade under \"runtime\". Programmet bygger på att att this.firstNr alltid ska innehålla ett lägre värde än variabeln this.secondNr. När programmet väl har itererar över hela textsträngen så kommer värdet som finns i this.firstNr att vara värdet som ska presenteras. Dock finns utöver detta en del logik som tvingar att fylla objektets variable från null-värden innan sortering kan utföras. Man kan ju inte sorter bara ett värde! Tycker att denna laboration blev väldigt svår de jag intuitivt tänker lösning i form av en array istället. Då hade man löst problematiken på nolltid mot vad denna övning krävde. Insikten om att övning på att rita algoritm och logik har dock om dein inte var stor tidigare blivit stor nu. Nästan att man önskar att få läsa en kurs i hur man gör detta så snart som möjligt. Det skulle troligen spara väldigt mycket tid. Det svåratst problemet som jag tycker man kan ställas inför i programmering är när man tappar algoritmen. När man inte längre är säker på vad en variables funktion faktiskt är. Sitter man därtill och intar en \"slökodningsattityd\" som jag faktiskt gjorde i denna uppgift då blir även de mest triviala uppgifterna svåra. Då gör man sig en större tjänst om man tar en paus, diskuterar kanske problemet med en kollega så kommer man inte förvärra en dålig algoritm ytterligare!</reflection>","        </reflections>"]}]}],[{"group":"doc","deltas":[{"start":{"row":296,"column":12},"end":{"row":296,"column":16},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":296,"column":0},"end":{"row":296,"column":4},"action":"remove","lines":["    "]},{"start":{"row":297,"column":0},"end":{"row":297,"column":4},"action":"remove","lines":["    "]},{"start":{"row":298,"column":0},"end":{"row":298,"column":4},"action":"remove","lines":["    "]},{"start":{"row":299,"column":0},"end":{"row":299,"column":4},"action":"remove","lines":["    "]},{"start":{"row":300,"column":0},"end":{"row":300,"column":4},"action":"remove","lines":["    "]},{"start":{"row":301,"column":0},"end":{"row":301,"column":4},"action":"remove","lines":["    "]},{"start":{"row":302,"column":0},"end":{"row":302,"column":4},"action":"remove","lines":["    "]},{"start":{"row":303,"column":0},"end":{"row":303,"column":4},"action":"remove","lines":["    "]},{"start":{"row":304,"column":0},"end":{"row":304,"column":4},"action":"remove","lines":["    "]},{"start":{"row":305,"column":0},"end":{"row":305,"column":4},"action":"remove","lines":["    "]},{"start":{"row":306,"column":0},"end":{"row":306,"column":4},"action":"remove","lines":["    "]},{"start":{"row":307,"column":0},"end":{"row":307,"column":4},"action":"remove","lines":["    "]},{"start":{"row":308,"column":0},"end":{"row":308,"column":4},"action":"remove","lines":["    "]},{"start":{"row":309,"column":0},"end":{"row":309,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":309,"column":4},"end":{"row":309,"column":8},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":8},"end":{"row":309,"column":0},"action":"remove","lines":["<reflection>Reflektion Uppgift 1a: Den här uppgiften var ganska så rättfram vad det gäller logiken i själva programmet. Enkelt att skapa sig en bild av det är som ska utföras. Uppgiften i sig bygger inte heller upp några särskilda krav på hur ett färdigt program ska vara vid leverans. Frågor som dyker upp nu kan dock vara felhantering. Eftersom metoden endast har intress av att \"räkna\" gement \"a\" och versalt \"A\" innebär det ju att det enda som ska in i programmet och beräknas faktiskt är bokstäver. Ytterligae påbyggnad av programmets funktionalitet skulle kunna vara att lägga in try/catch-satser med felhantering. Exempelvis skulle man kunna på ett tydligt sätt markera formulärsfältet med någon \"skrikig\" färg att här har det blivit fel. Varsågod att mata in ett nytt värde. Självklart skulle man bygga in även denna funktionalitet  med hjälp av javascript. Däremot vore det möjligen lämpligt att skapa en \"error.js\" för detta ändamålet. Vad gäller felhantering och validering under programmets gång så är det något som jag vill bli så mycket bättre på. Jag tänker att kan man bygga in \"hinder\" i programutveckling som gör att tydliga fel uppkommer så skulle man ha väldigt stort nytta av detta. Ibland, eller kanska rentav ganska ofta. Framförallt då när kodning sker i javscript innfinner sig en känsla av att man tappar kontakten med kodandet. Saker uppför sig inte som man tänkt sig att det ska. Innan denna kursen \"Iterativ Mjukvaruutveckling\" så läste jag C# med hjälp av utvecklingsmiljön Visual Studio. Kan känna att just \"debuggin\" i javscript känns svårate då jag inte hitta snabba vägar att debugga på ett effektivt sätt. Om man ska dra en paralell i att utvecklar program till exempelvis löpning så kan man nog säga att man kan ha en tränande löpare som tränar regelbundet som en förebild. Träningarna i sig kan man se som delmål för att slutligen komma till huvudmålet för just träningen. Om man översätter löparen små delmål till \"punktform\" för att nå huvudmålet (färdig applikation) så kommer man få arbetet att löpa på så mycket bättre. Har man dessutom tidsuppskatta och kalkylreat de olika delmålen/leveranserna av programvara så kan man även följa upp detta. Antingen håller kalkyerna, kanske rentav att man går plus. Eller i det sämre läget. Man har räknat bort sig och måste därmed revidera sin kalkylberäkning inför framtida projekt. Däremot kan delmålen och just uppföljning och eventuell aktuell reflektion kring dessa göra alla parter i projektet mer medvetna om problematiken för olika uppgifter inom \"samma projekt\".</reflection>","        <stamp id=\"2\" date=\"20141123\" startTime=\"09:00\" endTime=\"10:00\"> ","            <notes>Reflekterat uppgift 1b</notes>","        </stamp>","        <reflection>Reflektion Uppgift 1b: Vid start av uppgift 1b gjordes ganska omgående upptäckten av att återanvändning av kod från tidigare uppgift (1a) borde vara möjlig. Tänkte att likheten i programmet möjliggr \"absolut\" återanvänding av html/scc och det enda som jag egentligen behövde modifiera var logiken i programmet. Paralellt med denna kurs läser jag javscript. Javascript är också det språk som jag kommer att använda för samtliga upgifter i Laboration 1 DV404 - Planering och förbättring. Anledning till att jag väljer javscript framför c# eller php (som jag anser mig kunna om man jämför mer javscript) är att jag ser det som en självklarhet att utmana sig själv att sträcka sig efter nya insikter och bli förhoppningsvis en bättre och mer komplett programmerare. Därför har jag därför i denna uppgift för första gången försökt att tillämpa något som heter konstruktorfunktioner i javascript. En konstruktorfunktion i javscript är så nog så \"nära\" en klass man kan komma i javscript. Konstruktorfunktionen kom jag att kalla Calculator och ligger i filen Calculator.js. Att lägga märke till är att filnamn och funktion har samma benämning med en första boksta som versal. Möjligen kan man se det som \"överkurs\" att göra en \"klass\" för denna labb, men då jag behöver parallel träning mot kursen webbteknik I i javascript ser jag det som ett utmärkt tillfälle för repetition. Vad gäller konstruktorfunktionen så skapade jag en medlem som var ansvarig för att hålla aktuell sträng, en räknar som fick ta emot värdet från \" nollor\" (this.zeros) 1b_run.js vid körning, en räknare som tog emot udda tal (this.odd) och slutligen också en räknare för de jämna talen (this.even). Känner att jag gjort mig en stor tjänst i denna lösning då jag börjar greppa styrkan i att använda sig av objekt i programmering. Det kändes väldigt ledande i själva programmerandet just när man skrev \"iteratorn\" i \"1b_run.js\" hur den skulle skicka iväg räknade värden för att läggas in i objektet som jag kallade \"Calc\" i uppgiften. Denna lösning innebär också att det skulle vara betydligt enklare att bygga vidare på en mer komplex beräkning med flera objekt av \"Calculator. En viktig bit att minnas från denna labb är att man tydligen aldrig kan läsa en uppgift för många ggr. Jag hade troligen ett stort intresse av att jobba med labb 1c när det var labb 1b som skulle göras. Lyckligtvis var det inte värre än att jag \"moddade\" koden jag vid tillfället lyckas att skapa för att passa för den rätta uppgiften. Har också vid denna labb förjat fundera på det här planering av mjukvaruprojekt. Kanske ska man lägga dit kommentare när man ändå tidsrapportera. Kan för egen del tycka att det gått åt alldeles för mycket tid för detta enkla program så här efteråt. En tid säger ju inte vad det är man gjort. Detta skulle också vara högaktuellt vid \"uppföljningsmöten\" och utvärderingar och olika slag. Som ett stöd för \"förbättringsåtgärder\". Könns som en bra och kritisk tanke oftare dyker upp i mitt huvud nu. Vad håller jag på med och vad gör jag av min tid?. Är detta effektivt nog tidsmässig?</reflection>","        <stamp id=\"3\" date=\"20141123\" startTime=\"10:15\" endTime=\"11:00\"> ","            <notes>Reflekterat uppgift 1c</notes>","        </stamp>","        <reflection>Tänkte att den här uppgiften är gjord på en kvart. Det var den som jag av misstag startade med på labb 1b. Intog väl en slapp attityd och slökodade utan att fokuser. Är det nåt som jag börjar att inse. Är man trött och tappar förmågan att hålla flera variabler och logik i huvudet är det dags att ta ett \"break\". Väldigt ofta är det under dessa micropauser man kommer till insikt. Ibland blir man förblindad av vad det är man ska göra. Vilken ordning man behöver göras saker. Vad är det faktiskt som krävs att man löser för att kunna leverera en fungerande programvara. Uppgiften gjorde mig frustrerad eftersom jag saknade någon form av kontrollvariabel under körningen. Borde noterat vilken variabel det var men gjorde inte så. Härmed inser jag då återigen allvaret i att utvärdera sig själv, så som dessa uppfgifter \"påtvingar\" oss att göra. Vad gäller mina formulär så börjar jag känna att det finns \"utveckligspotential\" i att använda sig av den metod som jag valt. Det var en lång startsträcka med de är ett gott stöd nu när de finns på plats. När jag rappoerterar en tid blir det snyggt och prydligt. Även om jag känner att själva programmeringen misslyckas emellanåt så är i alla fall tidsrapportering väl strukturerad. Vad gäller lösningen för denna uppgiften utgick jag jag som tidigare sagt från uppgift 1b. Justerade min konstruktorfunktions medlemsvariabler till lämpliga värden. Initialt använde jag mig av tre \"värdehållare\" för att lösa problemet. Trologen var detta en stor bov till att det tog så lång tid att bli färdig. Det tog inte speciellt lång tid efter att jag ritat upp ett \"pyramidliknade\" algoritm att inse att jag faktisk bara behövde två värde sparade under \"runtime\". Programmet bygger på att att this.firstNr alltid ska innehålla ett lägre värde än variabeln this.secondNr. När programmet väl har itererar över hela textsträngen så kommer värdet som finns i this.firstNr att vara värdet som ska presenteras. Dock finns utöver detta en del logik som tvingar att fylla objektets variable från null-värden innan sortering kan utföras. Man kan ju inte sorter bara ett värde! Tycker att denna laboration blev väldigt svår de jag intuitivt tänker lösning i form av en array istället. Då hade man löst problematiken på nolltid mot vad denna övning krävde. Insikten om att övning på att rita algoritm och logik har dock om dein inte var stor tidigare blivit stor nu. Nästan att man önskar att få läsa en kurs i hur man gör detta så snart som möjligt. Det skulle troligen spara väldigt mycket tid. Det svåratst problemet som jag tycker man kan ställas inför i programmering är när man tappar algoritmen. När man inte längre är säker på vad en variables funktion faktiskt är. Sitter man därtill och intar en \"slökodningsattityd\" som jag faktiskt gjorde i denna uppgift då blir även de mest triviala uppgifterna svåra. Då gör man sig en större tjänst om man tar en paus, diskuterar kanske problemet med en kollega så kommer man inte förvärra en dålig algoritm ytterligare!</reflection>",""]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":12},"end":{"row":300,"column":16},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":8},"end":{"row":300,"column":12},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":299,"column":16},"end":{"row":300,"column":0},"action":"insert","lines":["",""]},{"start":{"row":300,"column":0},"end":{"row":300,"column":8},"action":"insert","lines":["        "]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":8},"end":{"row":300,"column":12},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":12},"end":{"row":300,"column":13},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":13},"end":{"row":300,"column":14},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":14},"end":{"row":300,"column":15},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":14},"end":{"row":300,"column":15},"action":"remove","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":13},"end":{"row":300,"column":14},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":12},"end":{"row":300,"column":13},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":12},"end":{"row":300,"column":13},"action":"insert","lines":["<"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":13},"end":{"row":300,"column":14},"action":"insert","lines":[">"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":13},"end":{"row":300,"column":14},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":14},"end":{"row":300,"column":15},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":15},"end":{"row":300,"column":16},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":16},"end":{"row":300,"column":17},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":17},"end":{"row":300,"column":18},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":18},"end":{"row":300,"column":19},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":19},"end":{"row":300,"column":20},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":20},"end":{"row":300,"column":21},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":21},"end":{"row":300,"column":22},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":22},"end":{"row":300,"column":23},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":23},"end":{"row":300,"column":37},"action":"insert","lines":["></reflection>"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":37},"end":{"row":300,"column":38},"action":"remove","lines":[">"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":24},"end":{"row":300,"column":25},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":25},"end":{"row":300,"column":26},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":26},"end":{"row":300,"column":27},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":300,"column":27},"end":{"row":300,"column":28},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":42},"end":{"row":298,"column":43},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":41},"end":{"row":298,"column":42},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":40},"end":{"row":298,"column":41},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":39},"end":{"row":298,"column":40},"action":"remove","lines":["1"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":38},"end":{"row":298,"column":39},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":37},"end":{"row":298,"column":38},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":36},"end":{"row":298,"column":37},"action":"remove","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":35},"end":{"row":298,"column":36},"action":"remove","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":34},"end":{"row":298,"column":35},"action":"remove","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":33},"end":{"row":298,"column":34},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":32},"end":{"row":298,"column":33},"action":"remove","lines":["p"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":31},"end":{"row":298,"column":32},"action":"remove","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":30},"end":{"row":298,"column":31},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":29},"end":{"row":298,"column":30},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":28},"end":{"row":298,"column":29},"action":"remove","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":27},"end":{"row":298,"column":28},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":26},"end":{"row":298,"column":27},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":25},"end":{"row":298,"column":26},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":24},"end":{"row":298,"column":25},"action":"remove","lines":["k"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":23},"end":{"row":298,"column":24},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":22},"end":{"row":298,"column":23},"action":"remove","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":21},"end":{"row":298,"column":22},"action":"remove","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":20},"end":{"row":298,"column":21},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":19},"end":{"row":298,"column":20},"action":"remove","lines":["R"]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":198},"end":{"row":298,"column":199},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":197},"end":{"row":298,"column":198},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":196},"end":{"row":298,"column":197},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":195},"end":{"row":298,"column":196},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":298,"column":195},"end":{"row":298,"column":196},"action":"insert","lines":[")"]}]}]]},"ace":{"folds":[],"scrolltop":4211,"scrollleft":0,"selection":{"start":{"row":273,"column":28},"end":{"row":273,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":262,"state":"start","mode":"ace/mode/xml"}},"timestamp":1416737071961,"hash":"544256b89b44e3681ee201cfc3ca609a561ae618"}